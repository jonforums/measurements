## What?

A mini-framework for hosting your own little Ruby Code Inquisition party.
Currently benchmarking, API tracing, and controlled execution for use with
code profiling is envisioned.

## Usage

The project's goal is to keep as much of the boilerplate setup and driver code
needed to automate benchmarking, API tracing, and profiling out of the actual
code you want to test. Ideally, you write a `.rb` containing the code you want
to test, drop the `.rb` file into the `workloads` subdirectory, and use the
`rci` runner to help benchmark, API trace, or execute the code.

<pre><code>
C:\projects\measurements-git>rci

usage: rci [RUBY_OPTS] COMMAND

where COMMAND is one of:

  bench &lt;W|all&gt;   benchmark workload W or all workloads
  exec W          execute workload W
  init            initialize environment
  ls              list all workloads
  trace W         trace workload W

where RUBY_OPTS are:

  --disable-gems  disable RubyGems use
</code></pre>

## License

3-clause BSD. See project LICENSE file.

## TODO

* implement `init` command
* implement `exec` command
* update `rci.bat` to allow feeding `ruby.exe` multiple options
* create `rci.ps1`
* implement cmd line regex workload matching for benchmarking
* enable multiple tracers to be defined in `config.yml` but only 1 active
* make all execution code non-Windows specific
* support both system and user `workloads` and `input` working dirs
* gemify?
* implement basic benchmarking statistics
