## What?

A mini-framework for hosting your own little Ruby Code Interrogation party.
Currently benchmarking, API tracing, and controlled execution for use with
code profiling is envisioned.

## Usage

The project's goal is to keep as much of the boilerplate setup and driver code
needed to automate benchmarking, API tracing, and profiling out of the actual
code you want to test. Ideally, you write a `.rb` containing the code you want
to test, drop the `.rb` file into the `workloads` subdirectory, and use the
`rci` runner to help benchmark, API trace, or execute the code.

Custom plugins can be created by dropping an `.rb` file starting with the code
`require 'rci'` into the `plugins` subdirectory. The plugin can count on all
framework configuration being complete before the plugin is loaded. The plugin
is loaded before any COMMAND is executed.

<pre><code>
C:\projects\measurements-git>rci

usage: rci [RUBY_OPTS] COMMAND

where COMMAND is one of:

  bench &lt;W|all&gt;   benchmark workload W or all workloads
  exec W          execute workload W
  init            initialize environment
  ls              list all workloads
  trace W         trace workload W

where RUBY_OPTS are:

  --disable-gems  disable RubyGems use

where 'exec' CMD_OPTS are:

  --pause         pause before/after running workload
</code></pre>

### Current Usage Warts

* MRI 1.8.7 errors out when given the invalid option `--disable-gems`, making
  `pik run rci --disable-gems bench all` less graceful.
* Must manually set the environment variable `JRUBY_OPTS=--1.9` to
  interrogate JRuby in 1.9 mode.

## License

3-clause BSD. See project LICENSE file.

## TODO

* implement cmd line regex workload matching for benchmarking
* fix JRuby problem in `processmonitor.rb` when running `trace`
* extract cmd line arg parsing from `rci.bat` to C .exe
* create `rci.ps1`
* create `rci.sh` and implement `trace` (strace or ltrace) on Linux
* make all execution code non-Windows specific
* support both system and user `workloads` and `input` working dirs
* implement basic benchmarking statistics
* gemify?
